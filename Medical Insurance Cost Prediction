{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyPxVvXXhoe/GFG23um7luDa"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Importing the Libreries"],"metadata":{"id":"hVWge7jUDe29"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"1qUjxUfN22d-"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn import metrics"]},{"cell_type":"markdown","source":["# Data Collection and Analysis"],"metadata":{"id":"6901QdnSEAro"}},{"cell_type":"markdown","source":["### import the Dataset"],"metadata":{"id":"gNX9m3nN0sWR"}},{"cell_type":"code","source":["data_set = pd.read_csv('/content/Train_Data.csv')"],"metadata":{"id":"ithkxLosD5_W"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Exploratory Data Analysis"],"metadata":{"id":"aRvFjo0b0u9I"}},{"cell_type":"code","source":["data_set.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xHbJHgvrD_sV","executionInfo":{"status":"ok","timestamp":1677269699571,"user_tz":-60,"elapsed":19,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"4d3a69d0-8992-4cee-9a04-b28c60daa703"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3630, 7)"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["# printing the first 5 rows of the dataset\n","data_set.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"8e0uUro9EINp","executionInfo":{"status":"ok","timestamp":1677269708279,"user_tz":-60,"elapsed":843,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"83bdc585-684f-4dc9-c8da-d6035988717c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         age     sex        bmi smoker     region  children       charges\n","0  21.000000    male  25.745000     no  northeast         2   3279.868550\n","1  36.976978  female  25.744165    yes  southeast         3  21454.494239\n","2  18.000000    male  30.030000     no  southeast         1   1720.353700\n","3  37.000000    male  30.676891     no  northeast         3   6801.437542\n","4  58.000000    male  32.010000     no  southeast         1  11946.625900"],"text/html":["\n","  <div id=\"df-4178b9a5-75d1-4d91-a422-b8af97940176\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>children</th>\n","      <th>charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>21.000000</td>\n","      <td>male</td>\n","      <td>25.745000</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>2</td>\n","      <td>3279.868550</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>36.976978</td>\n","      <td>female</td>\n","      <td>25.744165</td>\n","      <td>yes</td>\n","      <td>southeast</td>\n","      <td>3</td>\n","      <td>21454.494239</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18.000000</td>\n","      <td>male</td>\n","      <td>30.030000</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1</td>\n","      <td>1720.353700</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>37.000000</td>\n","      <td>male</td>\n","      <td>30.676891</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>3</td>\n","      <td>6801.437542</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>58.000000</td>\n","      <td>male</td>\n","      <td>32.010000</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1</td>\n","      <td>11946.625900</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4178b9a5-75d1-4d91-a422-b8af97940176')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4178b9a5-75d1-4d91-a422-b8af97940176 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4178b9a5-75d1-4d91-a422-b8af97940176');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# getting infos about the dataset\n","data_set.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jWk4_GW0EKfP","executionInfo":{"status":"ok","timestamp":1677269755921,"user_tz":-60,"elapsed":493,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"3cdb74b2-33dc-473b-cf0d-2c5a4de6f737"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3630 entries, 0 to 3629\n","Data columns (total 7 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   age       3630 non-null   float64\n"," 1   sex       3630 non-null   object \n"," 2   bmi       3630 non-null   float64\n"," 3   smoker    3630 non-null   object \n"," 4   region    3630 non-null   object \n"," 5   children  3630 non-null   int64  \n"," 6   charges   3630 non-null   float64\n","dtypes: float64(3), int64(1), object(3)\n","memory usage: 198.6+ KB\n"]}]},{"cell_type":"code","source":["# cheking for missing values in the dataset\n","data_set.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_yb2LL87EWIp","executionInfo":{"status":"ok","timestamp":1677269834834,"user_tz":-60,"elapsed":1121,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"feba1272-4512-4152-cd7a-860e15703e0e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age         0\n","sex         0\n","bmi         0\n","smoker      0\n","region      0\n","children    0\n","charges     0\n","dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":[">This Data has no missing Values"],"metadata":{"id":"NXR5XbmbErxf"}},{"cell_type":"code","source":["# getting statistical measures about the Data\n","data_set.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"tihSpd7QEpTT","executionInfo":{"status":"ok","timestamp":1677269888849,"user_tz":-60,"elapsed":58,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"cd827fb3-14f9-46fd-9090-ae9ad4b42e43"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               age          bmi     children       charges\n","count  3630.000000  3630.000000  3630.000000   3630.000000\n","mean     38.887036    30.629652     2.503581  12784.808644\n","std      12.151029     5.441307     1.712568  10746.166743\n","min      18.000000    15.960000     0.000000   1121.873900\n","25%      29.000000    26.694526     1.000000   5654.818262\n","50%      39.170922    30.200000     3.000000   9443.807222\n","75%      48.343281    34.100000     4.000000  14680.407505\n","max      64.000000    53.130000     5.000000  63770.428010"],"text/html":["\n","  <div id=\"df-593e44c1-3919-4a69-a9c5-e8ef8e647f25\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3630.000000</td>\n","      <td>3630.000000</td>\n","      <td>3630.000000</td>\n","      <td>3630.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>38.887036</td>\n","      <td>30.629652</td>\n","      <td>2.503581</td>\n","      <td>12784.808644</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>12.151029</td>\n","      <td>5.441307</td>\n","      <td>1.712568</td>\n","      <td>10746.166743</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>18.000000</td>\n","      <td>15.960000</td>\n","      <td>0.000000</td>\n","      <td>1121.873900</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>29.000000</td>\n","      <td>26.694526</td>\n","      <td>1.000000</td>\n","      <td>5654.818262</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>39.170922</td>\n","      <td>30.200000</td>\n","      <td>3.000000</td>\n","      <td>9443.807222</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>48.343281</td>\n","      <td>34.100000</td>\n","      <td>4.000000</td>\n","      <td>14680.407505</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>64.000000</td>\n","      <td>53.130000</td>\n","      <td>5.000000</td>\n","      <td>63770.428010</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-593e44c1-3919-4a69-a9c5-e8ef8e647f25')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-593e44c1-3919-4a69-a9c5-e8ef8e647f25 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-593e44c1-3919-4a69-a9c5-e8ef8e647f25');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["data_set['age'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x1V4WdwKHN5C","executionInfo":{"status":"ok","timestamp":1677270831063,"user_tz":-60,"elapsed":37,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"3436e6dd-66a2-408c-8e1e-8ba34d39adaf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["19.000000    74\n","39.000000    72\n","18.000000    70\n","48.000000    56\n","33.000000    49\n","             ..\n","24.957310     1\n","47.847419     1\n","21.510282     1\n","49.940613     1\n","49.201678     1\n","Name: age, Length: 1589, dtype: int64"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["data_set['sex'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c0MXF11UI-Q-","executionInfo":{"status":"ok","timestamp":1677270992452,"user_tz":-60,"elapsed":521,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"8689ffc5-feb9-4ffc-eddb-413a399d253c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["male      2029\n","female    1601\n","Name: sex, dtype: int64"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["data_set['region'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kF8B_YhgJuEC","executionInfo":{"status":"ok","timestamp":1677271186960,"user_tz":-60,"elapsed":1185,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"530de810-a3fc-4505-fb5d-5176be01d548"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["southeast    1021\n","northwest     911\n","southwest     850\n","northeast     848\n","Name: region, dtype: int64"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["### Data Visualization "],"metadata":{"id":"lAaVMzKlE42W"}},{"cell_type":"code","source":["# analysis of age distribution\n","sns.set()\n","plt.figure(figsize=(8,8))\n","sns.distplot(data_set['age'])\n","plt.title('Age Distribution')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":573},"id":"2v-evDCAE3WO","executionInfo":{"status":"ok","timestamp":1677270893294,"user_tz":-60,"elapsed":1212,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"99a4df9f-5622-4bbc-b4c8-e9eff264e8dd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x576 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["# analysing the BMI \n","plt.figure(figsize =(8,8))\n","sns.distplot( data_set['bmi'])\n","plt.title('BMI Distribution')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":573},"id":"vljiNVFOFV6o","executionInfo":{"status":"ok","timestamp":1677270435743,"user_tz":-60,"elapsed":1397,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"5296d4e0-a30d-4700-f21f-652ac8f0deb9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x576 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# analysing Sex \n","plt.figure(figsize=(8,8))\n","sns.countplot( x='sex' , data=data_set)\n","plt.title('Sex Distribution')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":518},"id":"FFiV60XVHC5x","executionInfo":{"status":"ok","timestamp":1677270968917,"user_tz":-60,"elapsed":866,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"705494d9-11d3-46e9-dba3-580dd21bc10c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 576x576 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Data Pre-Processing "],"metadata":{"id":"sor8LcWlJJVk"}},{"cell_type":"markdown","source":["### Encoding the categorical values"],"metadata":{"id":"pi4kj2iy1QS6"}},{"cell_type":"code","source":["data_set.replace({'sex':{'male':1 , 'female':0}, 'smoker':{'yes':1 , 'no':0}, 'region':{'southeast':0 , 'southwest':1 , 'northeast':2 , 'northwest':3}}, inplace = True)"],"metadata":{"id":"9r42xziEJD_I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_set.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"0AXBO1D_KFVP","executionInfo":{"status":"ok","timestamp":1677271285936,"user_tz":-60,"elapsed":541,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"dd01a65a-f363-46e9-d142-6bf5880fed09"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         age  sex        bmi  smoker  region  children       charges\n","0  21.000000    1  25.745000       0       2         2   3279.868550\n","1  36.976978    0  25.744165       1       0         3  21454.494239\n","2  18.000000    1  30.030000       0       0         1   1720.353700\n","3  37.000000    1  30.676891       0       2         3   6801.437542\n","4  58.000000    1  32.010000       0       0         1  11946.625900"],"text/html":["\n","  <div id=\"df-7c232f13-f3bb-4508-baf5-bda394512f7f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>children</th>\n","      <th>charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>21.000000</td>\n","      <td>1</td>\n","      <td>25.745000</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3279.868550</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>36.976978</td>\n","      <td>0</td>\n","      <td>25.744165</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>21454.494239</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18.000000</td>\n","      <td>1</td>\n","      <td>30.030000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1720.353700</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>37.000000</td>\n","      <td>1</td>\n","      <td>30.676891</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>6801.437542</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>58.000000</td>\n","      <td>1</td>\n","      <td>32.010000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>11946.625900</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7c232f13-f3bb-4508-baf5-bda394512f7f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7c232f13-f3bb-4508-baf5-bda394512f7f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7c232f13-f3bb-4508-baf5-bda394512f7f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":[">Sex : 1--> male , 0--> female\n","\n",">Smoker : 1--> yes , 0--> no\n","\n",">region : 0--> southeast , 1--> southwest , 2--> northeast , 3--> northwest"],"metadata":{"id":"8pGRYIvLKQMo"}},{"cell_type":"markdown","source":["### splitting to features and target"],"metadata":{"id":"g8NKxmGa1MTT"}},{"cell_type":"code","source":["x = data_set.drop(['charges'] , axis = 1)\n","y = data_set['charges']"],"metadata":{"id":"GaYgTU1sKLtU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(x)\n","print(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9nLFDiR2LFsI","executionInfo":{"status":"ok","timestamp":1677271613299,"user_tz":-60,"elapsed":564,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"3aa84ba7-11f0-45af-e63a-11168ee21a01"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["            age  sex        bmi  smoker  region  children\n","0     21.000000    1  25.745000       0       2         2\n","1     36.976978    0  25.744165       1       0         3\n","2     18.000000    1  30.030000       0       0         1\n","3     37.000000    1  30.676891       0       2         3\n","4     58.000000    1  32.010000       0       0         1\n","...         ...  ...        ...     ...     ...       ...\n","3625  48.820767    0  41.426984       0       3         4\n","3626  38.661977    0  26.202557       0       0         2\n","3627  56.000000    1  40.300000       0       1         0\n","3628  48.061207    0  34.930624       0       0         1\n","3629  37.598865    0  25.219233       0       2         3\n","\n","[3630 rows x 6 columns]\n","0        3279.868550\n","1       21454.494239\n","2        1720.353700\n","3        6801.437542\n","4       11946.625900\n","            ...     \n","3625    10987.324964\n","3626    11735.844352\n","3627    10602.385000\n","3628     8976.140452\n","3629     7027.698968\n","Name: charges, Length: 3630, dtype: float64\n"]}]},{"cell_type":"markdown","source":["### splitting dataset to test & train data"],"metadata":{"id":"Id6G7knE1cRg"}},{"cell_type":"code","source":["x_train , x_test , y_train , y_test = train_test_split(x,y, random_state=19)"],"metadata":{"id":"JhqJktxhLbh_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# comparing splitted data with the original\n","print(\"original dataset : \", x.shape)\n","print(\"training data : \", x_train.shape)\n","print(\"test data : \", x_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jViVjtlkLuBG","executionInfo":{"status":"ok","timestamp":1677271783632,"user_tz":-60,"elapsed":850,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"4a472aac-af47-42d3-9148-19bf5d341c68"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["original dataset :  (3630, 6)\n","training data :  (2722, 6)\n","test data :  (908, 6)\n"]}]},{"cell_type":"markdown","source":["# Training"],"metadata":{"id":"z5Ttw5geMGtY"}},{"cell_type":"markdown","source":["### Regression Model"],"metadata":{"id":"HyoSX5B61iUY"}},{"cell_type":"code","source":["model = LinearRegression()"],"metadata":{"id":"0g7m6oZjMBgg"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Training the model"],"metadata":{"id":"LsU4FwBe1k-w"}},{"cell_type":"code","source":["model.fit(x_train , y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lTJ8dq53ML-A","executionInfo":{"status":"ok","timestamp":1677271827932,"user_tz":-60,"elapsed":12,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"5ee1bad2-fefc-4e2f-d583-5c1e1b7569bd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":["# Evaluation the model "],"metadata":{"id":"d_7lG45UMSt4"}},{"cell_type":"markdown","source":["### On the Train Data"],"metadata":{"id":"t3_x5_50MWAD"}},{"cell_type":"code","source":["#make prediction on the training data\n","pred_1 = model.predict(x_train)\n","\n","# error square\n","score_1 = metrics.r2_score(pred_1 , y_train)\n","print(\"The Error Square is : \", score_1)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l83DgaO5MP_A","executionInfo":{"status":"ok","timestamp":1677272000899,"user_tz":-60,"elapsed":585,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"e1ef5df1-0495-4576-9d2f-2fc6dbe9bee3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The Error Square is :  0.5783574913221622\n"]}]},{"cell_type":"markdown","source":["### On the Test Data"],"metadata":{"id":"ft9iFZ3KM79G"}},{"cell_type":"code","source":["#make prediction on the test data\n","pred_2 = model.predict(x_test)\n","\n","# error square\n","score_2 = metrics.r2_score(pred_2 , y_test)\n","print(\"The Error Square is : \", score_2)\n"],"metadata":{"executionInfo":{"status":"ok","timestamp":1677272068913,"user_tz":-60,"elapsed":593,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"f99a3125-b85c-4db2-9669-0f2804c44b23","colab":{"base_uri":"https://localhost:8080/"},"id":"rV6HLm5UNBj0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The Error Square is :  0.6621451713466752\n"]}]},{"cell_type":"markdown","source":[">The Error Square is nearly equal between train & test data , and this means that the model is trained well and there is no overfitting "],"metadata":{"id":"yrk9bYfbNQCq"}},{"cell_type":"markdown","source":["### Predictive System"],"metadata":{"id":"UdyQitP2NhXf"}},{"cell_type":"code","source":["# take input data of the person  \n","input_data = ()\n","\n","# covertig input data to numpy array\n","input_data_np = np.asarray(input_data)\n","\n","# reshaping the array \n","reshaped_input = input_data_np.reshape(1,-1)\n","\n","# making prediction \n","prediction = model.predict(reshaped_input)\n","\n","print('The Medical Insurance Cost of this person is : USD',prediction[0])\n"],"metadata":{"id":"g8-B_U4wNK01"},"execution_count":null,"outputs":[]}]}